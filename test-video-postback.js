/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–±–µ–∫–∞
 * –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–±–µ–∫–∞ –∏–∑ –≤–∏–¥–µ–æ');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
async function testVideoServices() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º videoProcessor
    if (typeof videoProcessor !== 'undefined') {
      console.log('‚úÖ videoProcessor –¥–æ—Å—Ç—É–ø–µ–Ω');
      console.log('üìã –ú–µ—Ç–æ–¥—ã videoProcessor:', Object.getOwnPropertyNames(videoProcessor));
    } else {
      console.log('‚ùå videoProcessor –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º videoCacheService
    if (typeof videoCacheService !== 'undefined') {
      console.log('‚úÖ videoCacheService –¥–æ—Å—Ç—É–ø–µ–Ω');
      console.log('üìã –ú–µ—Ç–æ–¥—ã videoCacheService:', Object.getOwnPropertyNames(videoCacheService));
    } else {
      console.log('‚ùå videoCacheService –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Ä–≤–∏—Å–æ–≤:', error);
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ hero
function testHeroSettings() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ hero...');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ localStorage –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    const heroSettings = {
      videoRemovePostback: true,
      videoCropBottom: true,
      videoCropRight: true,
      videoCropTop: false,
      videoCropLeft: false
    };
    
    console.log('üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ hero:', heroSettings);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ hero –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ hero:', error);
  }
}

// –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ (—Å–∏–º—É–ª—è—Ü–∏—è)
async function testVideoProcessing() {
  console.log('üîç –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ...');
  
  try {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π Blob (—Å–∏–º—É–ª—è—Ü–∏—è –≤–∏–¥–µ–æ —Ñ–∞–π–ª–∞)
    const testVideoBlob = new Blob(['test video content'], { type: 'video/mp4' });
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –≤–∏–¥–µ–æ Blob —Å–æ–∑–¥–∞–Ω:', testVideoBlob);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ videoProcessor –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å Blob
    if (typeof videoProcessor !== 'undefined') {
      console.log('üé¨ videoProcessor –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å –≤–∏–¥–µ–æ —Ñ–∞–π–ª–∞–º–∏');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥ getVideoInfo
      try {
        const videoInfo = await videoProcessor.getVideoInfo(testVideoBlob);
        console.log('‚úÖ getVideoInfo —Ä–∞–±–æ—Ç–∞–µ—Ç:', videoInfo);
      } catch (infoError) {
        console.log('‚ö†Ô∏è getVideoInfo –Ω–µ –º–æ–∂–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π Blob (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ):', infoError.message);
      }
      
    } else {
      console.log('‚ùå videoProcessor –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ:', error);
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–µ—à–∞ –≤–∏–¥–µ–æ
async function testVideoCache() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–µ—à–∞ –≤–∏–¥–µ–æ...');
  
  try {
    if (typeof videoCacheService !== 'undefined') {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–µ—à–∞
      const cacheSize = await videoCacheService.getCacheSize();
      console.log('üìä –†–∞–∑–º–µ—Ä –∫–µ—à–∞ –≤–∏–¥–µ–æ:', cacheSize, '–±–∞–π—Ç');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ –≤ –∫–µ—à–µ
      const allVideos = await videoCacheService.getAllVideos();
      console.log('üìπ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ –≤ –∫–µ—à–µ:', allVideos.length);
      
      if (allVideos.length > 0) {
        console.log('üìã –í–∏–¥–µ–æ –≤ –∫–µ—à–µ:', allVideos.map(v => ({
          key: v.key,
          size: v.size,
          type: v.type
        })));
      }
      
    } else {
      console.log('‚ùå videoCacheService –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–µ—à–∞ –≤–∏–¥–µ–æ:', error);
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function runAllTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤...\n');
  
  await testVideoServices();
  console.log('');
  
  testHeroSettings();
  console.log('');
  
  await testVideoProcessing();
  console.log('');
  
  await testVideoCache();
  console.log('');
  
  console.log('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
  console.log('üí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ –≤ HeroEditor');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
runAllTests().catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
});

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
window.testVideoPostback = {
  testVideoServices,
  testHeroSettings,
  testVideoProcessing,
  testVideoCache,
  runAllTests
};
