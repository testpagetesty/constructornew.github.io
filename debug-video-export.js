// –û—Ç–ª–∞–¥–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤–∏–¥–µ–æ - –∑–∞–ø—É—Å—Ç–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
console.log('üîç –û–¢–õ–ê–î–ö–ê –≠–ö–°–ü–û–†–¢–ê –í–ò–î–ï–û');

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
console.log('\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤:');
console.log('videoCacheService –¥–æ—Å—Ç—É–ø–µ–Ω:', typeof videoCacheService !== 'undefined');
console.log('imageCacheService –¥–æ—Å—Ç—É–ø–µ–Ω:', typeof imageCacheService !== 'undefined');

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ localStorage:');
const allKeys = Object.keys(localStorage);
console.log('–í—Å–µ –∫–ª—é—á–∏ localStorage:', allKeys);

const videoKeys = allKeys.filter(key => key.includes('video') || key.includes('Video'));
console.log('–ö–ª—é—á–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤–∏–¥–µ–æ:', videoKeys);

videoKeys.forEach(key => {
  const value = localStorage.getItem(key);
  console.log(`${key}:`, value);
});

// 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º IndexedDB
console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ IndexedDB:');
if (typeof videoCacheService !== 'undefined') {
  videoCacheService.getAllVideos().then(videos => {
    console.log('–í—Å–µ –≤–∏–¥–µ–æ –≤ –∫–µ—à–µ:', videos);
    console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ:', videos.length);
    
    if (videos.length > 0) {
      videos.forEach((video, index) => {
        console.log(`–í–∏–¥–µ–æ ${index + 1}:`, {
          key: video.key,
          size: video.size,
          type: video.type,
          hasValue: !!video.value,
          hasBlob: !!video.blob
        });
      });
    } else {
      console.log('‚ùå –í –∫–µ—à–µ –Ω–µ—Ç –≤–∏–¥–µ–æ!');
    }
  }).catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∏–¥–µ–æ –∏–∑ –∫–µ—à–∞:', error);
  });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–µ—à–∞
  videoCacheService.getCacheSize().then(size => {
    console.log('–†–∞–∑–º–µ—Ä –∫–µ—à–∞ –≤–∏–¥–µ–æ:', size, '–±–∞–π—Ç');
  }).catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –∫–µ—à–∞:', error);
  });
} else {
  console.log('‚ùå videoCacheService –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!');
}

// 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:');
if (typeof imageCacheService !== 'undefined') {
  imageCacheService.getAllImages().then(images => {
    console.log('–í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∫–µ—à–µ:', images);
    console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', images.length);
  }).catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –∫–µ—à–∞:', error);
  });
} else {
  console.log('‚ùå imageCacheService –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!');
}

// 5. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
console.log('\n5Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:');
const heroVideoMetadata = localStorage.getItem('heroVideoMetadata');
if (!heroVideoMetadata) {
  console.log('‚ö†Ô∏è –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ...');
  
  const testMetadata = {
    filename: 'test-video.mp4',
    type: 'video/mp4',
    size: 1024 * 1024,
    lastModified: new Date().toISOString()
  };
  
  localStorage.setItem('heroVideoMetadata', JSON.stringify(testMetadata));
  console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã:', testMetadata);
} else {
  console.log('‚úÖ –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ —É–∂–µ –µ—Å—Ç—å:', heroVideoMetadata);
}

console.log('\nüéâ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã—à–µ.');
